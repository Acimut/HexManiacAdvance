<Application x:Class="HavenSoft.Gen3Hex.View.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:hsv="clr-namespace:HavenSoft.View;assembly=HavenSoft"
             xmlns:solarized="clr-namespace:Solarized;assembly=HavenSoft">
   <Application.Resources>
      <!-- Icons accessible using IconExtension -->
      <hsv:Icons x:Key="Icons"/>

      <!-- Scrollbar style. Based on normal style, but with solarize colors. -->
      <solarized:ThemeExtension x:Key="ScrollBar.Static.Background" Target="Background"/>
      <solarized:ThemeExtension x:Key="ScrollBar.MouseOver.Background" Target="Background"/>
      <solarized:ThemeExtension x:Key="ScrollBar.Pressed.Background" Target="Background"/>
      <solarized:ThemeExtension x:Key="ScrollBar.Disabled.Background" Target="Background"/>
      <solarized:ThemeExtension x:Key="ScrollBar.Pressed.Glyph" Target="Primary"/>
      <solarized:ThemeExtension x:Key="ScrollBar.MouseOver.Glyph" Target="Primary"/>
      <solarized:ThemeExtension x:Key="ScrollBar.Disabled.Glyph" Target="Primary"/>
      <solarized:ThemeExtension x:Key="ScrollBar.Static.Glyph" Target="Primary"/>
      <solarized:ThemeExtension x:Key="ScrollBar.Static.Border" Target="Backlight"/>
      <solarized:ThemeExtension x:Key="ScrollBar.MouseOver.Border" Target="Backlight"/>
      <solarized:ThemeExtension x:Key="ScrollBar.Pressed.Border" Target="Backlight"/>
      <solarized:ThemeExtension x:Key="ScrollBar.Disabled.Border" Target="Backlight"/>
      <solarized:ThemeExtension x:Key="ScrollBar.MouseOver.Thumb" Target="Secondary"/>
      <solarized:ThemeExtension x:Key="ScrollBar.Pressed.Thumb" Target="Secondary"/>
      <solarized:ThemeExtension x:Key="ScrollBar.Static.Thumb" Target="Secondary"/>
      <Style x:Key="FocusVisual">
         <Setter Property="Control.Template">
            <Setter.Value>
               <ControlTemplate>
                  <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
      <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
         <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
         <Setter Property="BorderThickness" Value="1"/>
         <Setter Property="HorizontalContentAlignment" Value="Center"/>
         <Setter Property="VerticalContentAlignment" Value="Center"/>
         <Setter Property="Padding" Value="1"/>
         <Setter Property="Focusable" Value="false"/>
         <Setter Property="IsTabStop" Value="false"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type RepeatButton}">
                  <Border x:Name="border" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="1" Background="{StaticResource ScrollBar.Static.Background}" SnapsToDevicePixels="true">
                     <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </Border>
                  <ControlTemplate.Triggers>
                     <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                     </Trigger>
                     <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                     </Trigger>
                     <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                        <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
      <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
         <Setter Property="OverridesDefaultStyle" Value="true"/>
         <Setter Property="Background" Value="Transparent"/>
         <Setter Property="Focusable" Value="false"/>
         <Setter Property="IsTabStop" Value="false"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type RepeatButton}">
                  <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
      <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
         <Setter Property="OverridesDefaultStyle" Value="true"/>
         <Setter Property="IsTabStop" Value="false"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Thumb}">
                  <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                  <ControlTemplate.Triggers>
                     <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                     </Trigger>
                     <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
      <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
         <Setter Property="OverridesDefaultStyle" Value="true"/>
         <Setter Property="IsTabStop" Value="false"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type Thumb}">
                  <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                  <ControlTemplate.Triggers>
                     <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                     </Trigger>
                     <Trigger Property="IsDragging" Value="true">
                        <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
      <Style TargetType="{x:Type ScrollBar}">
         <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
         <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
         <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
         <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
         <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
         <Setter Property="BorderThickness" Value="1,0"/>
         <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
         <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type ScrollBar}">
                  <Grid x:Name="Bg" SnapsToDevicePixels="true">
                     <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        <RowDefinition Height="0.00001*"/>
                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                     </Grid.RowDefinitions>
                     <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                     <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                        <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                     </RepeatButton>
                     <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                           <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                           <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                           <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                        </Track.Thumb>
                     </Track>
                     <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                        <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                     </RepeatButton>
                  </Grid>
                  <ControlTemplate.Triggers>
                     <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                           <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                           <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                     </MultiDataTrigger>
                     <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                           <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                           <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                     </MultiDataTrigger>
                     <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                           <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                           <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                     </MultiDataTrigger>
                     <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                           <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                           <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                     </MultiDataTrigger>
                     <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
         <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
               <Setter Property="Width" Value="Auto"/>
               <Setter Property="MinWidth" Value="0"/>
               <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
               <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
               <Setter Property="BorderThickness" Value="0,1"/>
               <Setter Property="Template">
                  <Setter.Value>
                     <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                           <Grid.ColumnDefinitions>
                              <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                              <ColumnDefinition Width="0.00001*"/>
                              <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                           </Grid.ColumnDefinitions>
                           <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                           <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                              <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                           </RepeatButton>
                           <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                              <Track.DecreaseRepeatButton>
                                 <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                              </Track.DecreaseRepeatButton>
                              <Track.IncreaseRepeatButton>
                                 <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                              </Track.IncreaseRepeatButton>
                              <Track.Thumb>
                                 <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                              </Track.Thumb>
                           </Track>
                           <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                              <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                           </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                           <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                 <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                 <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                           </MultiDataTrigger>
                           <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                 <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                 <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                           </MultiDataTrigger>
                           <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                 <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                 <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                           </MultiDataTrigger>
                           <MultiDataTrigger>
                              <MultiDataTrigger.Conditions>
                                 <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                 <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                              </MultiDataTrigger.Conditions>
                              <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                           </MultiDataTrigger>
                           <Trigger Property="IsEnabled" Value="false">
                              <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                              <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                           </Trigger>
                        </ControlTemplate.Triggers>
                     </ControlTemplate>
                  </Setter.Value>
               </Setter>
            </Trigger>
         </Style.Triggers>
      </Style>

      <!-- Menu style. Based on normal style, but with solarized colors. -->
      <solarized:ThemeExtension x:Key="Menu.Static.Background" Target="Background"/>
      <Style TargetType="{x:Type Menu}">
         <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
         <Setter Property="Foreground" Value="{solarized:Theme Primary}"/>
      </Style>

      <Style TargetType="{x:Type MenuItem}">
         <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
               <Setter Property="Template">
                  <Setter.Value>
                     <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Name="ItemBorder">
                           <ContentPresenter Margin="10,2" ContentSource="Header" RecognizesAccessKey="True" TextBlock.Foreground="{solarized:Theme Emphasis}"/>
                           <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}">
                              <Border x:Name="SubmenuBorder" BorderThickness="1"
                                 Background="{solarized:Theme Background}"
                                 BorderBrush="{solarized:Theme Blue}">
                                 <StackPanel Name="ItemsPresenter" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                              </Border>
                           </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                           <Trigger Property="IsMouseOver" Value="True">
                              <Setter TargetName="ItemBorder" Property="Background" Value="{solarized:Theme Backlight}" />
                           </Trigger>
                        </ControlTemplate.Triggers>
                     </ControlTemplate>
                  </Setter.Value>
               </Setter>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
               <Setter Property="Template">
                  <Setter.Value>
                     <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Name="ItemBorder" Background="Transparent">
                           <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="30"/>
                              <ColumnDefinition Width="130"/>
                              <ColumnDefinition Width="100"/>
                           </Grid.ColumnDefinitions>
                           <ContentPresenter Grid.Column="0" Margin="5,5,0,5" ContentSource="Icon" />
                           <ContentPresenter Grid.Column="1" Name="MainContent" Margin="10,5" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" TextBlock.Foreground="{solarized:Theme Emphasis}" />
                           <TextBlock Grid.Column="2" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Foreground="{solarized:Theme Secondary}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                           <Trigger Property="IsMouseOver" Value="True">
                              <Setter TargetName="ItemBorder" Property="Background" Value="{solarized:Theme Backlight}" />
                           </Trigger>
                           <Trigger Property="IsEnabled" Value="False">
                              <Setter TargetName="MainContent" Property="TextBlock.Foreground" Value="{solarized:Theme Secondary}" />
                              <Setter TargetName="MainContent" Property="TextBlock.FontStyle" Value="Italic" />
                           </Trigger>
                        </ControlTemplate.Triggers>
                     </ControlTemplate>
                  </Setter.Value>
               </Setter>
            </Trigger>
         </Style.Triggers>
      </Style>
      
      <!-- TabContol style. Based on normal style, but with solarized colors -->
      <solarized:ThemeExtension x:Key="TabItem.Selected.Background" Target="Background"/>
      <solarized:ThemeExtension x:Key="TabItem.Selected.Border" Target="Background"/>
      <Style TargetType="{x:Type TabControl}">
         <Setter Property="Padding" Value="2"/>
         <Setter Property="HorizontalContentAlignment" Value="Center"/>
         <Setter Property="VerticalContentAlignment" Value="Center"/>
         <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
         <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
         <Setter Property="BorderThickness" Value="1"/>
         <Setter Property="Foreground" Value="{solarized:Theme Primary}"/>
      </Style>

      <Style TargetType="{x:Type TabItem}">
         <Setter Property="Template">
            <Setter.Value>
               <ControlTemplate TargetType="{x:Type TabItem}">
                  <Border Name="OuterBorder" BorderThickness="0,0,1,0" BorderBrush="{solarized:Theme Background}"> <!-- used for the 1-pixel spacing between tabs -->
                     <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="{solarized:Theme Backlight}" Background="{solarized:Theme Backlight}"> <!-- used for selection -->
                        <Border Name="InnerBorder" BorderThickness="1,1,1,0" Padding="5,3" BorderBrush="{solarized:Theme Backlight}"> <!-- used for hover-over before selection -->
                           <ContentPresenter ContentSource="Header" />
                        </Border>
                     </Border>
                  </Border>
                  <ControlTemplate.Triggers>
                     <Trigger Property="IsSelected" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="{solarized:Theme Background}"/>
                        <Setter TargetName="Border" Property="BorderBrush" Value="{solarized:Theme Blue}"/>
                        <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{solarized:Theme Blue}"/>
                        <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{solarized:Theme Background}"/>
                        <Setter TargetName="Border" Property="Panel.ZIndex" Value="10"/>
                     </Trigger>
                     <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{solarized:Theme Blue}"/>
                     </Trigger>
                  </ControlTemplate.Triggers>
               </ControlTemplate>
            </Setter.Value>
         </Setter>
      </Style>
   </Application.Resources>
</Application>
