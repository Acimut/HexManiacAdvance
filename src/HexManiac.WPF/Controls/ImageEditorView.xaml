<UserControl x:Class="HavenSoft.HexManiac.WPF.Controls.ImageEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:hshmcvm="clr-namespace:HavenSoft.HexManiac.Core.ViewModels;assembly=HexManiac.Core"
             xmlns:hshmwpfc="clr-namespace:HavenSoft.HexManiac.WPF.Controls"
             xmlns:hshmwpfr="clr-namespace:HavenSoft.HexManiac.WPF.Resources"
             xmlns:local="clr-namespace:HavenSoft.HexManiac.WPF.Controls"
             Focusable="True">
   <UserControl.InputBindings>
      <KeyBinding Key="A" CommandParameter="{x:Static hshmcvm:ImageEditorTools.Pan}" Command="{Binding SelectTool}"/>
      <KeyBinding Key="S" CommandParameter="{x:Static hshmcvm:ImageEditorTools.Select}" Command="{Binding SelectTool}"/>
      <KeyBinding Key="D" CommandParameter="{x:Static hshmcvm:ImageEditorTools.Draw}" Command="{Binding SelectTool}"/>
      <KeyBinding Key="F" CommandParameter="{x:Static hshmcvm:ImageEditorTools.Fill}" Command="{Binding SelectTool}"/>
      <KeyBinding Key="G" CommandParameter="{x:Static hshmcvm:ImageEditorTools.EyeDropper}" Command="{Binding SelectTool}"/>
      <KeyBinding Key="D0" CommandParameter="0" Command="{Binding SelectColor}"/>
      <KeyBinding Key="D1" CommandParameter="1" Command="{Binding SelectColor}"/>
      <KeyBinding Key="D2" CommandParameter="2" Command="{Binding SelectColor}"/>
      <KeyBinding Key="D3" CommandParameter="3" Command="{Binding SelectColor}"/>
      <KeyBinding Key="D4" CommandParameter="4" Command="{Binding SelectColor}"/>
      <KeyBinding Key="D5" CommandParameter="5" Command="{Binding SelectColor}"/>
      <KeyBinding Key="D6" CommandParameter="6" Command="{Binding SelectColor}"/>
      <KeyBinding Key="D7" CommandParameter="7" Command="{Binding SelectColor}"/>
   </UserControl.InputBindings>
   <DockPanel>
      <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center">
         <StackPanel.Resources>
            <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
               <Setter Property="Command" Value="{Binding SelectTool}"/>
               <Setter Property="Width" Value="30"/>
               <Setter Property="Height" Value="30"/>
               <Setter Property="HorizontalContentAlignment" Value="Center"/>
               <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            <Style TargetType="Path">
               <Setter Property="Fill" Value="{DynamicResource Secondary}"/>
               <Setter Property="Stretch" Value="Uniform"/>
               <Setter Property="Width" Value="24"/>
               <Setter Property="Height" Value="24"/>
               <Style.Triggers>
                  <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=RadioButton}}" Value="True">
                     <Setter Property="Fill" Value="{DynamicResource Primary}"/>
                  </DataTrigger>
               </Style.Triggers>
            </Style>
         </StackPanel.Resources>
         <RadioButton CommandParameter="{x:Static hshmcvm:ImageEditorTools.Pan}"
            IsChecked="{Binding SelectedTool, Mode=OneWay, Converter={StaticResource EqualityCheck}, ConverterParameter={x:Static hshmcvm:ImageEditorTools.Pan}}">
            <RadioButton.Content>
               <Path Data="{hshmwpfr:Icon FourDirectionArrows}"/>
            </RadioButton.Content>
            <RadioButton.ToolTip>
               <ToolTip>
                  <DockPanel>
                     <Path Data="{hshmwpfr:Icon MiddleMouseButton}" Fill="{DynamicResource Secondary}" DockPanel.Dock="Right" VerticalAlignment="Top"/>
                     <TextBlock>
                        (A)rrange Position <LineBreak/>
                        <Italic Foreground="{DynamicResource Secondary}">
                           Move the sprite around on the screen to see it better.
                        </Italic>
                     </TextBlock>
                  </DockPanel>
               </ToolTip>
            </RadioButton.ToolTip>
         </RadioButton>
         <RadioButton CommandParameter="{x:Static hshmcvm:ImageEditorTools.Select}"
            IsChecked="{Binding SelectedTool, Mode=OneWay, Converter={StaticResource EqualityCheck}, ConverterParameter={x:Static hshmcvm:ImageEditorTools.Select}}">
            <RadioButton.Content>
               <Path Data="{hshmwpfr:Icon Selection}"/>
            </RadioButton.Content>
            <RadioButton.ToolTip>
               <ToolTip>
                  <TextBlock>
                     (S)elect Section<LineBreak/>
                     <Italic Foreground="{DynamicResource Secondary}">
                        Drag to select a rectangle of pixels. <LineBreak/>
                        Then drag again to move them around.
                     </Italic>
                  </TextBlock>
               </ToolTip>
            </RadioButton.ToolTip>
         </RadioButton>
         <RadioButton CommandParameter="{x:Static hshmcvm:ImageEditorTools.Draw}"
            IsChecked="{Binding SelectedTool, Mode=OneWay, Converter={StaticResource EqualityCheck}, ConverterParameter={x:Static hshmcvm:ImageEditorTools.Draw}}">
            <RadioButton.Content>
               <Path Data="{hshmwpfr:Icon Pencil}"/>
            </RadioButton.Content>
            <RadioButton.ToolTip>
               <ToolTip>
                  <TextBlock>
                     (D)raw Pixels <LineBreak/>
                     <Italic Foreground="{DynamicResource Secondary}">
                        Draw individual pixels by selecting a color. <LineBreak/>
                        If you use (g)rab color to select a block, <LineBreak/>
                        you can draw entire blocks or patterns at once.
                     </Italic>
                  </TextBlock>
               </ToolTip>
            </RadioButton.ToolTip>
         </RadioButton>
         <RadioButton CommandParameter="{x:Static hshmcvm:ImageEditorTools.Fill}"
            IsChecked="{Binding SelectedTool, Mode=OneWay, Converter={StaticResource EqualityCheck}, ConverterParameter={x:Static hshmcvm:ImageEditorTools.Fill}}">
            <RadioButton.Content>
               <Path Data="{hshmwpfr:Icon FillBucket}"/>
            </RadioButton.Content>
            <RadioButton.ToolTip>
               <ToolTip>
                  <TextBlock>
                     (F)ill Area<LineBreak/>
                     <Italic Foreground="{DynamicResource Secondary}">
                        Fill an entire region with a color. <LineBreak/>
                        Click and drag to fill a region with a gradient.
                     </Italic>
                  </TextBlock>
               </ToolTip>
            </RadioButton.ToolTip>
         </RadioButton>
         <RadioButton CommandParameter="{x:Static hshmcvm:ImageEditorTools.EyeDropper}"
            IsChecked="{Binding SelectedTool, Mode=OneWay, Converter={StaticResource EqualityCheck}, ConverterParameter={x:Static hshmcvm:ImageEditorTools.EyeDropper}}">
            <RadioButton.Content>
               <Path Data="{hshmwpfr:Icon EyeDropper}"/>
            </RadioButton.Content>
            <RadioButton.ToolTip>
               <ToolTip>
                  <DockPanel>
                     <Path Data="{hshmwpfr:Icon RightMouseButton}" Fill="{DynamicResource Secondary}" DockPanel.Dock="Right" VerticalAlignment="Top"/>
                     <TextBlock>
                        (G)rab Color <LineBreak/>
                        <Italic Foreground="{DynamicResource Secondary}">
                           Select a specific color by clicking it. <LineBreak/>
                           Click and drag to grab a block of colors instead.
                        </Italic>
                     </TextBlock>
                  </DockPanel>
               </ToolTip>
            </RadioButton.ToolTip>
         </RadioButton>
      </StackPanel>
      <hshmwpfc:PaletteControl DataContext="{Binding Palette}" VerticalAlignment="Center" DockPanel.Dock="Left" />
      <Grid Name="ImageContainer" Background="Transparent" ClipToBounds="True"
         MouseLeftButtonDown="MousePrimaryDown"
         MouseLeftButtonUp="MousePrimaryUp"
         MouseDown="MouseMiddleDown"
         MouseUp="MouseMiddleUp"
         MouseRightButtonDown="MouseSecondaryDown"
         MouseRightButtonUp="MouseSecondaryUp"
         MouseMove="MoveMouse"
         MouseWheel="WheelMouse">
         <local:PixelImage LayoutTransform="{x:Null}" RenderTransformOrigin=".5,.5" HorizontalAlignment="Center" VerticalAlignment="Center">
            <local:PixelImage.RenderTransform>
               <TransformGroup>
                  <ScaleTransform ScaleX="{Binding SpriteScale}" ScaleY="{Binding SpriteScale}"/>
                  <TranslateTransform X="{Binding XOffset}" Y="{Binding YOffset}"/>
               </TransformGroup>
            </local:PixelImage.RenderTransform>
         </local:PixelImage>
         <!-- Wrapping the selection render in a canvas to prevent clipping -->
         <Canvas
            IsHitTestVisible="False"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Width="{Binding ActualWidth, ElementName=SelectionRender}"
            Height="{Binding ActualHeight, ElementName=SelectionRender}">
            <local:SelectionRender x:Name="SelectionRender" Stretch="None">
               <local:SelectionRender.RenderTransform>
                  <TranslateTransform X="{Binding XOffset}" Y="{Binding YOffset}"/>
               </local:SelectionRender.RenderTransform>
            </local:SelectionRender>
         </Canvas>
      </Grid>
   </DockPanel>
</UserControl>
