<UserControl x:Class="HavenSoft.HexManiac.WPF.Controls.TabView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:hsv="clr-namespace:HavenSoft.HexManiac.WPF.Resources"
      xmlns:hsg3hvmtr="clr-namespace:HavenSoft.HexManiac.Core.ViewModels.Tools;assembly=HexManiac.Core"
      xmlns:hsg3hw="clr-namespace:HavenSoft.HexManiac.WPF.Windows"
      xmlns:hsg3hv="clr-namespace:HavenSoft.HexManiac.WPF.Controls"
      DataContextChanged="HandleDataContextChanged">
   <UserControl.Resources>
      <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
      <hsg3hv:IntegerToHexConverter x:Key="Hex"/>
      <hsg3hv:PaletteColorConverter x:Key="PaletteColorConverter"/>
   </UserControl.Resources>
   <DockPanel>
      <!-- Bottom Bar -->
      <DockPanel DockPanel.Dock="Bottom">
         <TextBlock DockPanel.Dock="Left" Text="{Binding SelectedAddress}" MouseRightButtonUp="AddressShowMenu"/>
         <Grid HorizontalAlignment="Right">
            <TextBlock Margin="10,0,0,0" Text="{Binding SelectedBytes}" MouseRightButtonUp="BytesShowMenu"/>
         </Grid>
      </DockPanel>
      <!-- Tool Headers -->
      <StackPanel DockPanel.Dock="Left" Visibility="{Binding HasTools, Converter={StaticResource BoolToVisibility}}">
         <Button Content="Table" Command="{Binding Tools.TableToolCommand}" Margin="0,2">
            <Button.LayoutTransform>
               <RotateTransform Angle="-90"/>
            </Button.LayoutTransform>
            <Button.Style>
               <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                  <Style.Triggers>
                     <DataTrigger Binding="{Binding Tools.SelectedIndex}" Value="0">
                        <Setter Property="BorderBrush" Value="{DynamicResource Accent}"/>
                     </DataTrigger>
                  </Style.Triggers>
               </Style>
            </Button.Style>
         </Button>
         <Button Content="Text" Command="{Binding Tools.StringToolCommand}" Margin="0,2">
            <Button.LayoutTransform>
               <RotateTransform Angle="-90"/>
            </Button.LayoutTransform>
            <Button.Style>
               <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                  <Style.Triggers>
                     <DataTrigger Binding="{Binding Tools.SelectedIndex}" Value="1">
                        <Setter Property="BorderBrush" Value="{DynamicResource Accent}"/>
                     </DataTrigger>
                  </Style.Triggers>
               </Style>
            </Button.Style>
         </Button>
         <Button Content="Code" Command="{Binding Tools.CodeToolCommand}" Margin="0,2">
            <Button.LayoutTransform>
               <RotateTransform Angle="-90"/>
            </Button.LayoutTransform>
            <Button.Style>
               <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                  <Style.Triggers>
                     <DataTrigger Binding="{Binding Tools.SelectedIndex}" Value="2">
                        <Setter Property="BorderBrush" Value="{DynamicResource Accent}"/>
                     </DataTrigger>
                  </Style.Triggers>
               </Style>
            </Button.Style>
         </Button>
      </StackPanel>
      <!-- Tools -->
      <Grid DockPanel.Dock="Left" DataContext="{Binding Tools}">
         <Grid.Style>
            <Style TargetType="Grid">
               <Style.Triggers>
                  <DataTrigger Binding="{Binding SelectedIndex}" Value="-1">
                     <Setter Property="Visibility" Value="Collapsed"/>
                  </DataTrigger>
               </Style.Triggers>
            </Style>
         </Grid.Style>
         <DockPanel Width="265" Name="TableToolPanel">
            <DockPanel.Style>
               <Style TargetType="DockPanel">
                  <Setter Property="Visibility" Value="Collapsed"/>
                  <Style.Triggers>
                     <DataTrigger Binding="{Binding SelectedIndex}" Value="0">
                        <Setter Property="Visibility" Value="Visible"/>
                     </DataTrigger>
                  </Style.Triggers>
               </Style>
            </DockPanel.Style>
            <ComboBox Name="TableSelector" ItemsSource="{Binding TableTool.TableList}" DropDownClosed="TableSelected" SelectedIndex="{Binding TableTool.SelectedTableIndex}" HorizontalAlignment="Center" MaxWidth="200" DockPanel.Dock="Top"/>
            <TextBlock Text="{Binding TableTool.CurrentElementName}" HorizontalAlignment="Center" Margin="0,2" MaxWidth="200" TextWrapping="Wrap" TextAlignment="Center" DockPanel.Dock="Top"/>
            <Grid DockPanel.Dock="Top">
               <Button Margin="5" Content="Previous" Command="{Binding TableTool.Previous}" HorizontalAlignment="Left"/>
               <Button Margin="5" Content="Next" Command="{Binding TableTool.Next}" HorizontalAlignment="Right"/>
               <Border Margin="5" HorizontalAlignment="Center" ToolTipService.InitialShowDelay="0">
                  <Border.ToolTip>
                     <ToolTip Background="{DynamicResource Backlight}" BorderBrush="{DynamicResource Accent}" BorderThickness="1">
                        <TextBlock TextAlignment="Left">
                           Select the last element of the table <LineBreak/>
                           and press this to extend the table.
                        </TextBlock>
                     </ToolTip>
                  </Border.ToolTip>
                  <Button Content="Add New" Command="{Binding TableTool.Append}"/>
               </Border>
            </Grid>
            <ScrollViewer VerticalScrollBarVisibility="Visible">
               <StackPanel>
                  <ItemsControl ItemsSource="{Binding TableTool.Children}" Grid.IsSharedSizeScope="True">
                     <ItemsControl.Resources>
                        <DataTemplate DataType="{x:Type hsg3hvmtr:SplitterArrayElementViewModel}">
                           <TextBlock Text="{Binding SectionName}" Margin="5" Grid.Column="0" FontSize="20"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type hsg3hvmtr:FieldArrayElementViewModel}">
                           <Grid HorizontalAlignment="Stretch" Margin="2">
                              <Grid.ColumnDefinitions>
                                 <ColumnDefinition Width="Auto" SharedSizeGroup="LeftColumn"/>
                                 <ColumnDefinition Width="*"/>
                              </Grid.ColumnDefinitions>
                              <TextBlock Text="{Binding Name}" Margin="5,0" Grid.Column="0"/>
                              <TextBox UndoLimit="0" Text="{Binding Content, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1"/>
                           </Grid>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type hsg3hvmtr:ComboBoxArrayElementViewModel}">
                           <Grid HorizontalAlignment="Stretch" Margin="2">
                              <Grid.ColumnDefinitions>
                                 <ColumnDefinition Width="Auto" SharedSizeGroup="LeftColumn"/>
                                 <ColumnDefinition Width="*"/>
                                 <ColumnDefinition Width="Auto"/>
                              </Grid.ColumnDefinitions>
                              <TextBlock Text="{Binding Name}" Margin="5,0" Grid.Column="0"/>
                              <ComboBox SelectedIndex="{Binding SelectedIndex}" ItemsSource="{Binding Options}" DisplayMemberPath="Text" Margin="0,0,2,0" Grid.Column="1"/>
                              <Button Grid.Column="2" Command="{Binding GotoSource}" Width="20" Height="20">
                                 <Button.ToolTip>
                                    <ToolTip Background="{DynamicResource Backlight}" BorderBrush="{DynamicResource Accent}" BorderThickness="1">
                                       <TextBlock TextAlignment="Left">
                                          Jump to the table used as<LineBreak/>
                                          a source for the options.
                                       </TextBlock>
                                    </ToolTip>
                                 </Button.ToolTip>
                                 <Path Data="{hsv:Icon RightArrow}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                              </Button>
                           </Grid>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type hsg3hvmtr:BitListArrayElementViewModel}">
                           <StackPanel>
                              <Grid HorizontalAlignment="Stretch" Margin="2">
                                 <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="LeftColumn"/>
                                    <ColumnDefinition Width="*"/>
                                 </Grid.ColumnDefinitions>
                                 <TextBlock Text="{Binding Name}" Margin="5,0" Grid.Column="0"/>
                                 <Button Grid.Column="1" HorizontalAlignment="Right" Command="{Binding LinkCommand}" Width="20" Height="20">
                                    <Button.ToolTip>
                                       <ToolTip Background="{DynamicResource Backlight}" BorderBrush="{DynamicResource Accent}" BorderThickness="1">
                                          <TextBlock TextAlignment="Left">
                                             Jump to the table used as<LineBreak/>
                                             a source for the options.
                                          </TextBlock>
                                       </ToolTip>
                                    </Button.ToolTip>
                                    <Path Data="{hsv:Icon RightArrow}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                                 </Button>
                              </Grid>
                              <ItemsControl ItemsSource="{Binding}">
                                 <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                       <WrapPanel/>
                                    </ItemsPanelTemplate>
                                 </ItemsControl.ItemsPanel>
                                 <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                       <CheckBox Margin="5,1,0,1" Width="115" IsChecked="{Binding IsChecked}" Content="{Binding BitLabel}"/>
                                    </DataTemplate>
                                 </ItemsControl.ItemTemplate>
                              </ItemsControl>
                           </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type hsg3hvmtr:StreamElementViewModel}">
                           <StackPanel>
                              <hsg3hv:CommonTableStreamControl />
                              <TextBox UndoLimit="0" Text="{Binding Content, UpdateSourceTrigger=PropertyChanged}" Margin="20,2,2,2" AcceptsReturn="True"
                                 Visibility="{Binding ShowContent, Converter={StaticResource BoolToVisibility}}"/>
                           </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type hsg3hvmtr:ButtonArrayElementViewModel}">
                           <Button HorizontalAlignment="Center" Content="{Binding Text}" Margin="5" Command="{Binding Command}"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type hsg3hvmtr:SpriteElementViewModel}">
                           <StackPanel>
                              <hsg3hv:CommonTableStreamControl />
                              <ItemsControl Name="ImageTiles" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" ItemsSource="{Binding Tiles}"
                                            Width="{Binding PixelWidth}" Height="{Binding PixelHeight}">
                                 <ItemsControl.LayoutTransform>
                                    <ScaleTransform ScaleX="2" ScaleY="2" />
                                 </ItemsControl.LayoutTransform>
                                 <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                       <WrapPanel/>
                                    </ItemsPanelTemplate>
                                 </ItemsControl.ItemsPanel>
                                 <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                       <hsg3hv:TileImage />
                                    </DataTemplate>
                                 </ItemsControl.ItemTemplate>
                              </ItemsControl>
                              <DockPanel Visibility="{Binding HasMultiplePages, Converter={StaticResource BoolToVisibility}}" LastChildFill="False">
                                 <Button Content="Previous" Command="{Binding PreviousPage}" DockPanel.Dock="Left"/>
                                 <Button Content="Next" Command="{Binding NextPage}" DockPanel.Dock="Right"/>
                              </DockPanel>
                           </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type hsg3hvmtr:PaletteElementViewModel}">
                           <StackPanel>
                              <hsg3hv:CommonTableStreamControl />
                              <ItemsControl HorizontalAlignment="Center" SnapsToDevicePixels="True" ItemsSource="{Binding Colors}"
                                            MouseDown="ActivatePalette">
                                 <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                       <UniformGrid Columns="{Binding ColorWidth}" Rows="{Binding ColorHeight}"/>
                                    </ItemsPanelTemplate>
                                 </ItemsControl.ItemsPanel>
                                 <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                       <Rectangle Fill="{Binding Converter={StaticResource PaletteColorConverter}}" Width="14" Height="14">
                                          <Rectangle.Stroke>
                                             <LinearGradientBrush>
                                                <GradientStop Color="Black" Offset="0" />
                                                <GradientStop Color="White" Offset="1" />
                                             </LinearGradientBrush>
                                          </Rectangle.Stroke>
                                       </Rectangle>
                                    </DataTemplate>
                                 </ItemsControl.ItemTemplate>
                              </ItemsControl>
                              <DockPanel Visibility="{Binding HasMultiplePages, Converter={StaticResource BoolToVisibility}}" LastChildFill="False">
                                 <Button Content="Previous" Command="{Binding PreviousPage}" DockPanel.Dock="Left"/>
                                 <Button Content="Next" Command="{Binding NextPage}" DockPanel.Dock="Right"/>
                              </DockPanel>
                           </StackPanel>
                        </DataTemplate>
                     </ItemsControl.Resources>
                  </ItemsControl>
               </StackPanel>
            </ScrollViewer>
         </DockPanel>
         <DockPanel Name="StringToolPanel">
            <DockPanel.Style>
               <Style TargetType="DockPanel">
                  <Setter Property="Visibility" Value="Collapsed"/>
                  <Style.Triggers>
                     <DataTrigger Binding="{Binding SelectedIndex}" Value="1">
                        <Setter Property="Visibility" Value="Visible"/>
                     </DataTrigger>
                  </Style.Triggers>
               </Style>
            </DockPanel.Style>
            <TextBlock Text="Address:" Margin="5,15,0,0" DockPanel.Dock="Top"/>
            <TextBox Text="{Binding StringTool.Address, Converter={StaticResource Hex}, UpdateSourceTrigger=PropertyChanged}" Margin="5" DockPanel.Dock="Top"/>
            <TextBlock DockPanel.Dock="Top" Text="{Binding StringTool.Message}" Width="255" HorizontalAlignment="Center" TextWrapping="Wrap" Visibility="{Binding StringTool.ShowMessage, Converter={StaticResource BoolToVisibility}}"/>
            <Button Margin="0,3" Command="{Binding StringTool.CheckIsText}" Content="Show As Text" HorizontalAlignment="Right" DockPanel.Dock="Top" Visibility="{Binding StringTool.ShowMessage, Converter={StaticResource BoolToVisibility}}"/>
            <Button Command="{Binding StringTool.InsertText}" Content="Insert New Text" HorizontalAlignment="Right" DockPanel.Dock="Top" Visibility="{Binding StringTool.ShowMessage, Converter={StaticResource BoolToVisibility}}"/>
            <TextBlock Text="Content:" Margin="5,30,0,0" DockPanel.Dock="Top"/>

            <Button Command="{Binding StringTool.Search}" Margin="5,0" Content="Search" HorizontalAlignment="Right" DockPanel.Dock="Bottom" />
            <TextBox Margin="5,0" Width="255" FontFamily="Consolas" Text="{Binding StringTool.SearchText, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding StringTool.Enabled}" DockPanel.Dock="Bottom">
               <TextBox.InputBindings>
                  <KeyBinding Key="Return" Command="{Binding StringTool.Search}"/>
                  <KeyBinding Key="F3" Command="{Binding StringTool.Search}"/>
               </TextBox.InputBindings>
            </TextBox>
            <TextBlock Text="Search:" Margin="5,0" DockPanel.Dock="Bottom"/>

            <Grid Margin="5,5" MinHeight="50" Width="255">
               <TextBox Name="StringToolTextBox" AcceptsReturn="True" TextWrapping="Wrap" FontFamily="Consolas" VerticalScrollBarVisibility="Auto" UndoLimit="0"
                  SelectionChanged="StringToolContentSelectionChanged"
                  LostFocus="ShowManualSelection"
                  GotFocus="HideManualSelection"
                  ScrollViewer.ScrollChanged="UpdateManualSelectionFromScroll"
                  IsEnabled="{Binding StringTool.Enabled}"
                  Text="{Binding StringTool.Content, UpdateSourceTrigger=PropertyChanged}" />
               <Rectangle Name="ManualHighlight" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="14" Fill="{DynamicResource Accent}" Opacity=".4"/>
            </Grid>
         </DockPanel>
         <DockPanel Name="CodeToolPanel">
            <DockPanel.Style>
               <Style TargetType="DockPanel">
                  <Setter Property="Visibility" Value="Collapsed"/>
                  <Style.Triggers>
                     <DataTrigger Binding="{Binding SelectedIndex}" Value="2">
                        <Setter Property="Visibility" Value="Visible"/>
                     </DataTrigger>
                  </Style.Triggers>
               </Style>
            </DockPanel.Style>
            <Grid HorizontalAlignment="Stretch" Margin="2" DockPanel.Dock="Top">
               <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" SharedSizeGroup="LeftColumn"/>
                  <ColumnDefinition Width="*"/>
               </Grid.ColumnDefinitions>
               <TextBlock Text="Code Type" Margin="5,0" Grid.Column="0"/>
               <ComboBox Grid.Column="1" Name="CodeModeSelector" SelectedItem="{Binding CodeTool.Mode}"/>
            </Grid>
            <TextBox UndoLimit="0" Margin="5" Width="255" FontFamily="Consolas" Text="{Binding CodeTool.Content, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding CodeTool.IsReadOnly}" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" />
         </DockPanel>
      </Grid>
      <!-- Anchor Editor -->
      <Border DockPanel.Dock="Top" Height="19" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource Backlight}">
         <DockPanel Visibility="{Binding AnchorTextVisible, Converter={StaticResource BoolToVisibility}}" >
            <TextBlock Width="70" Text="Anchor: " TextAlignment="Right" ToolTipService.ShowDuration="15000">
               <TextBlock.ToolTip>
                  <ToolTip Background="{DynamicResource Backlight}" BorderBrush="{DynamicResource Accent}" BorderThickness="1">
                     <TextBlock TextAlignment="Left">
                        <Bold>Anchor Editor</Bold> <LineBreak/>
                        Anchors can have a name and a format. <LineBreak/>
                        <LineBreak/>
                        Named anchors persist between sessions. <LineBreak/>
                        You can also use names in pointers and with Goto <Italic Foreground="{DynamicResource Secondary}">(Ctrl+G)</Italic>. <LineBreak/>
                        <LineBreak/>
                        Formats change how the data is displayed and edited. <LineBreak/>
                        For example, "" formats data as text. <LineBreak/>
                        To learn more about formats, visit the Wiki.
                     </TextBlock>
                  </ToolTip>
               </TextBlock.ToolTip>
            </TextBlock>
            <TextBox UndoLimit="0" Text="{Binding AnchorText, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,25,0"/>
         </DockPanel>
      </Border>
      <!-- Column Headers -->
      <hsg3hv:HorizontalSlantedTextControl DockPanel.Dock="Top"
         FontSize="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=ZoomLevel}"
         HeaderRows="{Binding ColumnHeaders}"
         ColumnWidth="{Binding CellWidth, ElementName=HexContent}"
         HorizontalOffset="{Binding ElementName=HexContent, Path=HorizontalScrollValue}"/>
      <!-- Row Headers -->
      <Grid DockPanel.Dock="Left" ClipToBounds="True" Background="{DynamicResource Backlight}" MouseDown="HeaderMouseDown" Name="HeaderRenderAreaContainer">
         <Grid Name="HeaderRenderArea">
            <Grid Name="ScrollingHeader" RenderTransform="{Binding RenderTransform, ElementName=ScrollingHexContent}">
               <Rectangle Name="OldHeader" RenderTransform="{Binding RenderTransform, ElementName=OldContent}">
                  <Rectangle.Fill>
                     <ImageBrush x:Name="OldHeaderBrush"/>
                  </Rectangle.Fill>
               </Rectangle>
               <ItemsControl Width="70" ItemsSource="{Binding Headers}" Background="{DynamicResource Backlight}">
                  <ItemsControl.ItemTemplate>
                     <DataTemplate>
                        <Viewbox Height="{Binding CellHeight, ElementName=HexContent}" HorizontalAlignment="Right" Margin="0,0,2,0">
                           <TextBlock Foreground="{DynamicResource Secondary}" Text="{Binding}" FontFamily="Consolas" Padding="1"/>
                        </Viewbox>
                     </DataTemplate>
                  </ItemsControl.ItemTemplate>
               </ItemsControl>
            </Grid>
         </Grid>
      </Grid>

      <Line Width="1" DockPanel.Dock="Left" Stroke="{DynamicResource Background}"/>
      <ScrollBar DockPanel.Dock="Right"
         Minimum="{Binding MinimumScroll}" Maximum="{Binding MaximumScroll}" Value="{Binding ScrollValue}"
         SmallChange="1" LargeChange="{Binding Height}" />
      <ScrollBar DockPanel.Dock="Bottom" Orientation="Horizontal" SmallChange="10" LargeChange="{Binding CellWidth, ElementName=HexContent}"
         Minimum="0" Maximum="{Binding HorizontalScrollMaximum, ElementName=HexContent}" Value="{Binding HorizontalScrollValue, ElementName=HexContent}"
         Visibility="{Binding ShowHorizontalScroll, ElementName=HexContent, Converter={StaticResource BoolToVisibility}}" />
      <Grid Margin=".5,.5,0,0" ClipToBounds="True" Name="HexContentRenderAreaContainer">
         <Grid Name="HexContentRenderArea">
            <Grid Name="ScrollingHexContent">
               <Grid.RenderTransform>
                  <TranslateTransform/>
               </Grid.RenderTransform>
               <Rectangle Name="OldContent">
                  <Rectangle.Fill>
                     <ImageBrush x:Name="OldContentBrush"/>
                  </Rectangle.Fill>
                  <Rectangle.RenderTransform>
                     <TranslateTransform/>
                  </Rectangle.RenderTransform>
               </Rectangle>
               <hsg3hv:HexContent x:Name="HexContent" GotFocus="ShowCursor" LostFocus="HideCursor" ViewPort="{Binding}" FontSize="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=ZoomLevel}"  ShowGrid="{Binding DataContext.ShowMatrix, RelativeSource={RelativeSource AncestorType=hsg3hw:MainWindow}}" CursorNeedsUpdate="UpdateBlinkyCursor"/>
               <Rectangle Width="1" Fill="{DynamicResource Secondary}" Visibility="Collapsed" IsHitTestVisible="False" Name="BlinkyCursor" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            </Grid>
         </Grid>
      </Grid>
   </DockPanel>
</UserControl>
