<Window x:Class="HavenSoft.HexManiac.WPF.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:hsg3hv="clr-namespace:HavenSoft.HexManiac.WPF.Controls"
        xmlns:hshmcvm="clr-namespace:HavenSoft.HexManiac.Core.ViewModels;assembly=HexManiac.Core"
        xmlns:hsv="clr-namespace:HavenSoft.HexManiac.WPF.Resources"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Icon="..\Resources\AppIcon.ico"
        PreviewMouseDown="RunDeferredActions"
        Title="Hex Maniac Advance" Height="480" MinHeight="300" Width="880" MinWidth="400" AllowDrop="True" Background="{DynamicResource Backlight}">
   <Window.Resources>
      <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
   </Window.Resources>
   <Window.InputBindings>
      <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding New}" />
      <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding Open}" />
      <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding Save}" />
      <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="{Binding SaveAs}" />
      <KeyBinding Key="A" Modifiers="Ctrl+Shift" Command="{Binding SaveAll}" />
      <KeyBinding Key="E" Modifiers="Ctrl" Command="{Binding ExportBackup}" />
      <KeyBinding Key="A" Modifiers="Ctrl" Command="{Binding SelectAll}" />
      <KeyBinding Key="F5" Command="{Binding RunFile}" CommandParameter="{DynamicResource FileSystem}"/>
      <KeyBinding Key="W" Modifiers="Ctrl" Command="{Binding Close}" CommandParameter="{DynamicResource FileSystem}" />

      <KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding Undo}" />
      <KeyBinding Key="Y" Modifiers="Ctrl" Command="{Binding Redo}" />
      <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding Cut}" />
      <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding Copy}" />
      <KeyBinding Key="C" Modifiers="Ctrl+Shift" Command="{Binding DeepCopy}" />
      <KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding Paste}" />
      <KeyBinding Key="B" Modifiers="Ctrl" Command="{Binding Paste}" />
      <KeyBinding Key="Delete" Command="{Binding Delete}" />
      <KeyBinding Key="F" Modifiers="Ctrl" Command="{Binding ShowFind}">
         <KeyBinding.CommandParameter>
            <sys:Boolean>true</sys:Boolean>
         </KeyBinding.CommandParameter>
      </KeyBinding>
      <KeyBinding Key="F3" Command="{Binding FindNext}" CommandParameter="{Binding Text, ElementName=FindBox}"/>
      <KeyBinding Key="F3" Modifiers="Shift" Command="{Binding FindPrevious}" CommandParameter="{Binding Text, ElementName=FindBox}"/>
      <KeyBinding Key="G" Modifiers="Ctrl" Command="{Binding GotoViewModel.ShowGoto}">
         <KeyBinding.CommandParameter>
            <sys:Boolean>true</sys:Boolean>
         </KeyBinding.CommandParameter>
      </KeyBinding>
      <KeyBinding Key="OemMinus" Modifiers="Ctrl" Command="{Binding Back}" />
      <KeyBinding Key="OemMinus" Modifiers="Ctrl+Shift" Command="{Binding Forward}" />

      <KeyBinding Key="M" Modifiers="Ctrl" Command="{Binding ToggleMatrix}" />
      <KeyBinding Key="H" Modifiers="Ctrl" Command="{Binding ShowHexConverter}">
         <KeyBinding.CommandParameter>
            <sys:Boolean>true</sys:Boolean>
         </KeyBinding.CommandParameter>
      </KeyBinding>

      <KeyBinding Key="Esc" Command="{Binding ClearError}"/>
   </Window.InputBindings>
   <Window.CommandBindings>
      <CommandBinding Command="NavigateJournal" Executed="ExecuteAnimation"/>
   </Window.CommandBindings>
   <Grid Name="ContentPanel">
      <DockPanel>
         <DockPanel DockPanel.Dock="Top" Background="{DynamicResource Background}">
            <DockPanel.Resources>
               <Style TargetType="Panel" x:Key="AnimateOnVisibilityChanged">
                  <Setter Property="HorizontalAlignment" Value="Right"/>
                  <Setter Property="DockPanel.Dock" Value="Right"/>
                  <Setter Property="Background" Value="{DynamicResource Backlight}"/>
               </Style>
            </DockPanel.Resources>
            <!-- Menu -->
            <Menu DockPanel.Dock="Left">
               <MenuItem Header="_File">
                  <MenuItem Header="_New" Command="{Binding New}" InputGestureText="Ctrl+N">
                     <MenuItem.Icon>
                        <Path Data="{hsv:Icon New}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                     </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem Header="_Open" Command="{Binding Open}" InputGestureText="Ctrl+O">
                     <MenuItem.Icon>
                        <Path Data="{hsv:Icon Open}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                     </MenuItem.Icon>
                  </MenuItem>
                  <Separator />
                  <MenuItem Header="_Save" Command="{Binding Save}" InputGestureText="Ctrl+S">
                     <MenuItem.Icon>
                        <Path Data="{hsv:Icon Save}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                     </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem Header="Save _As" Command="{Binding SaveAs}" InputGestureText="Ctrl+Shift+S" />
                  <MenuItem Header="Save A_ll" Command="{Binding SaveAll}" InputGestureText="Ctrl+Shift+A" />
                  <MenuItem Header="_Export Backup" Command="{Binding ExportBackup}" InputGestureText="Ctrl+E" />
                  <Separator />
                  <MenuItem Header="_Run" Command="{Binding RunFile}" InputGestureText="F5" CommandParameter="{DynamicResource FileSystem}"/>
                  <Separator />
                  <MenuItem Header="_Close Current Tab" Command="{Binding Close}" CommandParameter="{DynamicResource FileSystem}" InputGestureText="Ctrl+W" />
                  <MenuItem Header="E_xit" Click="ExitClicked" InputGestureText="Alt+F4">
                     <MenuItem.Icon>
                        <Path Data="{hsv:Icon Exit}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                     </MenuItem.Icon>
                  </MenuItem>
               </MenuItem>
               <MenuItem Header="_Edit">
                  <MenuItem Header="_Undo" Command="{Binding Undo}" InputGestureText="Ctrl+Z">
                     <MenuItem.Icon>
                        <Path Data="{hsv:Icon UndoArrow}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                     </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem Header="_Redo" Command="{Binding Redo}" InputGestureText="Ctrl+Y">
                     <MenuItem.Icon>
                        <Path Data="{hsv:Icon RedoArrow}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                     </MenuItem.Icon>
                  </MenuItem>
                  <Separator />
                  <MenuItem Header="Cu_t" Command="{Binding Cut}" InputGestureText="Ctrl+X"/>
                  <MenuItem Header="_Copy" Command="{Binding Copy}" InputGestureText="Ctrl+C"/>
                  <MenuItem Header="D_eep Copy" Command="{Binding DeepCopy}" InputGestureText="Ctrl+Shift+C"/>
                  <MenuItem Header="_Paste / Replace" Command="{Binding Paste}" InputGestureText="Ctrl+V"/>
                  <MenuItem Header="_Paste / Replace" Command="{Binding Paste}" InputGestureText="Ctrl+B"/>
                  <MenuItem Header="_Delete" Command="{Binding Delete}" InputGestureText="Del"/>
                  <MenuItem Header="_Select All" Command="{Binding SelectAll}" InputGestureText="Ctrl+A"/>
                  <Separator />
                  <MenuItem Header="_Find" Command="{Binding ShowFind}" InputGestureText="Ctrl+F">
                     <MenuItem.CommandParameter>
                        <sys:Boolean>true</sys:Boolean>
                     </MenuItem.CommandParameter>
                  </MenuItem>
                  <MenuItem Header="Find _Next" Command="{Binding FindNext}" CommandParameter="{Binding Text, ElementName=FindBox}" InputGestureText="F3"/>
                  <MenuItem Header="Find _Previous" Command="{Binding FindPrevious}" CommandParameter="{Binding Text, ElementName=FindBox}" InputGestureText="Shift+F3"/>
                  <MenuItem Header="_Goto" Command="{Binding GotoViewModel.ShowGoto}" InputGestureText="Ctrl+G">
                     <MenuItem.CommandParameter>
                        <sys:Boolean>true</sys:Boolean>
                     </MenuItem.CommandParameter>
                  </MenuItem>
                  <MenuItem Header="Go _Back" Command="{Binding Back}" InputGestureText="Ctrl+-"/>
                  <MenuItem Header="Go _Forward" Command="{Binding Forward}" InputGestureText="Ctrl+Shift+-"/>
                  <MenuItem Header="Show Hex Converter" Command="{Binding ShowHexConverter}" InputGestureText="Ctrl+H">
                     <MenuItem.CommandParameter>
                        <sys:Boolean>true</sys:Boolean>
                     </MenuItem.CommandParameter>
                  </MenuItem>
               </MenuItem>
               <MenuItem Header="_View">
                  <MenuItem Header="Show _Matrix Grid" IsCheckable="True" IsChecked="{Binding ShowMatrix}" InputGestureText="Ctrl+M"/>
                  <MenuItem Header="_Animate when Scrolling" IsCheckable="True" IsChecked="{Binding AnimateScroll}"/>
                  <MenuItem Header="Use Table Entry Headers" IsCheckable="True" IsChecked="{Binding UseTableEntryHeaders}">
                     <MenuItem.ToolTip>
                        <ToolTip BorderThickness="0" Background="{DynamicResource Backlight}">
                           <TextBlock Text="Replaces raw address with a name when possible."/>
                        </ToolTip>
                     </MenuItem.ToolTip>
                  </MenuItem>
                  <MenuItem Header="Reset _Zoom" Command="{Binding ResetZoom}">
                     <MenuItem.ToolTip>
                        <ToolTip BorderThickness="0" Background="{DynamicResource Backlight}">
                           <TextBlock Text="You can increase or decrease the size of the text in the cells using Ctrl+Scroll."/>
                        </ToolTip>
                     </MenuItem.ToolTip>
                  </MenuItem>
                  <MenuItem Header="Reset _Alignment" Command="{Binding ResetAlignment}" />
                  <MenuItem Header="C_ustomize Theme" Click="ShowThemeSelector"/>
                  <MenuItem Header="Reset _Theme" Command="{Binding ResetTheme}"/>
                  <MenuItem Header="_Clear Error" Command="{Binding ClearError}" InputGestureText="Esc"/>
               </MenuItem>
               <MenuItem Header="Developer" Visibility="{Binding ShowDeveloperMenu, Converter={StaticResource BoolToVisibility}}">
                  <MenuItem Header="Copy Aligned Address" Command="{Binding CopyAlignedAddress}" CommandParameter="{DynamicResource FileSystem}"/>
                  <MenuItem Header="Assert" Click="DeveloperRaiseAssert"/>
                  <MenuItem Header="Throw ArgumentOutOfRangeException" Click="DeveloperThrowArgumentOutOfRangeException"/>
                  <MenuItem Header="Write Debug" Click="DeveloperWriteDebug"/>
                  <MenuItem Header="Write Trace" Click="DeveloperWriteTrace"/>
               </MenuItem>
               <MenuItem Header="_Tools">
                  <MenuItem Header="_Hide All Tools" Command="{Binding Tools.HideCommand}"/>
                  <Separator/>
                  <MenuItem Header="Toggle T_able Tool" Command="{Binding Tools.TableToolCommand}"/>
                  <MenuItem Header="Toggle _Text Tool" Command="{Binding Tools.StringToolCommand}"/>
                  <MenuItem Header="Toggle _Image Tool" Command="{Binding Tools.SpriteToolCommand}"/>
                  <MenuItem Header="Toggle _Code Tool" Command="{Binding Tools.CodeToolCommand}"/>
               </MenuItem>
               <MenuItem Name="QuickEdits" Header="Utilities"/>
               <MenuItem Header="_Help">
                  <MenuItem Header="_Update" IsEnabled="{Binding IsNewVersionAvailable}" Click="UpdateClick">
                     <MenuItem.ToolTip>
                        <ToolTip>
                           <ToolTip.Content>
                              <TextBlock>
                                 Takes you to the releases page so you
                                 <LineBreak/>
                                 can download the new version.
                              </TextBlock>
                           </ToolTip.Content>
                        </ToolTip>
                     </MenuItem.ToolTip>
                  </MenuItem>
                  <MenuItem Header="_Wiki" Click="WikiClick"/>
                  <MenuItem Header="_Tutorials" Click="TutorialsClick"/>
                  <MenuItem Header="_Report an Issue" Click="ReportIssueClick"/>
                  <MenuItem Header="_Discord" Click="DiscordClick">
                     <MenuItem.Icon>
                        <Path Data="{hsv:Icon Discord}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                     </MenuItem.Icon>
                  </MenuItem>
                  <MenuItem Header="Assist Development">
                     <MenuItem Header="Copy Anchor Reference" Command="{Binding CopyAnchorReference}" CommandParameter="{DynamicResource FileSystem}"/>
                  </MenuItem>
                  <MenuItem Header="_About" Click="AboutClick"/>
               </MenuItem>
            </Menu>
            <!-- Find -->
            <StackPanel Name="FindPanel" Orientation="Horizontal" DockPanel.Dock="Right" Visibility="{Binding FindControlVisible, Converter={StaticResource BoolToVisibility}}">
               <TextBlock Text="Find :" Margin="10,0" />
               <TextBox Name="FindBox" MinWidth="200" IsVisibleChanged="EditBoxVisibilityChanged" Text="{Binding FindText, UpdateSourceTrigger=PropertyChanged}">
                  <TextBox.InputBindings>
                     <KeyBinding Key="Esc" Command="{Binding ShowFind}">
                        <KeyBinding.CommandParameter>
                           <sys:Boolean>false</sys:Boolean>
                        </KeyBinding.CommandParameter>
                     </KeyBinding>
                     <KeyBinding Key="Return" Command="{Binding Find}" CommandParameter="{Binding Text, ElementName=FindBox}"/>
                  </TextBox.InputBindings>
               </TextBox>
            </StackPanel>
            <!-- Hex Converter -->
            <StackPanel Name="HexConverter" Orientation="Horizontal" DockPanel.Dock="Right" Visibility="{Binding HexConverterVisible, Converter={StaticResource BoolToVisibility}}">
               <TextBlock Text="Hex :" Margin="10,0" />
               <TextBox Name="HexBox" MinWidth="100" IsVisibleChanged="EditBoxVisibilityChanged" Text="{Binding HexText, UpdateSourceTrigger=PropertyChanged}">
                  <TextBox.InputBindings>
                     <KeyBinding Key="Esc" Command="{Binding ShowHexConverter}">
                        <KeyBinding.CommandParameter>
                           <sys:Boolean>false</sys:Boolean>
                        </KeyBinding.CommandParameter>
                     </KeyBinding>
                  </TextBox.InputBindings>
               </TextBox>
               <TextBlock Text="Decimal :" Margin="10,0" />
               <TextBox Name="DecBox" MinWidth="100" IsVisibleChanged="EditBoxVisibilityChanged" Text="{Binding DecText, UpdateSourceTrigger=PropertyChanged}">
                  <TextBox.InputBindings>
                     <KeyBinding Key="Esc" Command="{Binding ShowHexConverter}">
                        <KeyBinding.CommandParameter>
                           <sys:Boolean>false</sys:Boolean>
                        </KeyBinding.CommandParameter>
                     </KeyBinding>
                  </TextBox.InputBindings>
               </TextBox>
            </StackPanel>
            <!-- Message -->
            <StackPanel Name="MessagePanel" Visibility="{Binding ShowMessage, Converter={StaticResource BoolToVisibility}}" Style="{StaticResource AnimateOnVisibilityChanged}" Orientation="Horizontal">
               <TextBlock Margin="10,0" VerticalAlignment="Center" Text="{Binding InformationMessage}" Foreground="{DynamicResource Accent}"/>
               <Button Command="{Binding ClearMessage}" Width="15">
                  <Path Data="{hsv:Icon Exit}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
               </Button>
            </StackPanel>
            <!-- Error -->
            <Grid Name="ErrorPanel" Visibility="{Binding ShowError, Converter={StaticResource BoolToVisibility}}" Style="{StaticResource AnimateOnVisibilityChanged}">
               <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="Auto"/>
               </Grid.ColumnDefinitions>
               <Grid.InputBindings>
                  <MouseBinding MouseAction="MiddleClick" Command="{Binding ClearError}"/>
               </Grid.InputBindings>
               <TextBlock Margin="10,0" VerticalAlignment="Center" Text="{Binding ErrorMessage}" TextWrapping="Wrap" TextAlignment="Right" Foreground="{DynamicResource Error}"/>
               <Button Command="{Binding ClearError}" Width="15" Grid.Column="1">
                  <Path Data="{hsv:Icon Exit}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
               </Button>
            </Grid>
         </DockPanel>
         <StackPanel DockPanel.Dock="Top" Background="{DynamicResource Background}" HorizontalAlignment="Stretch" Orientation="Horizontal">
            <StackPanel.Resources>
               <Style TargetType="Path">
                  <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}}}"/>
                  <Setter Property="Stretch" Value="Uniform"/>
               </Style>
               <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                  <Setter Property="Background" Value="{DynamicResource Background}"/>
                  <Setter Property="Width" Value="28"/>
                  <Setter Property="Height" Value="28"/>
                  <Setter Property="Margin" Value="1"/>
               </Style>
               <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                  <Setter Property="Width" Value="30"/>
               </Style>
            </StackPanel.Resources>
            <Button ToolTip="Navigate Back (Ctrl + (-))" Command="{Binding Back}">
               <Path Data="{hsv:Icon LeftArrow}"/>
            </Button>
            <Button ToolTip="Navigate Forward (Ctrl+Shift + (-))" Command="{Binding Forward}">
               <Path Data="{hsv:Icon RightArrow}"/>
            </Button>
            <Rectangle Width="5"/>
            <Button ToolTip="Save (Ctrl+S)" Command="{Binding Save}">
               <Button.Style>
                  <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                     <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                           <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                        </Trigger>
                     </Style.Triggers>
                  </Style>
               </Button.Style>
               <Path Data="{hsv:Icon Save}"/>
            </Button>
            <Rectangle Width="5"/>
            <Button ToolTip="Undo (Ctrl+Z)" Command="{Binding Undo}">
               <Path Data="{hsv:Icon UndoArrow}"/>
            </Button>
            <Button ToolTip="Redo (Ctrl+Y)" Command="{Binding Redo}">
               <Path Data="{hsv:Icon RedoArrow}"/>
            </Button>
            <Rectangle Width="5"/>
            <Button ToolTip="Show Goto Menu (Ctrl+G)" Command="{Binding GotoViewModel.ShowGoto}">
               <Button.Style>
                  <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                     <Style.Triggers>
                        <DataTrigger Binding="{Binding GotoViewModel.ControlVisible}" Value="True">
                           <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                        </DataTrigger>
                     </Style.Triggers>
                  </Style>
               </Button.Style>
               <Path Data="{hsv:Icon Home}"/>
            </Button>
            <Button ToolTip="Find (Ctrl+F)" Command="{Binding ShowFind}">
               <Button.Style>
                  <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                     <Style.Triggers>
                        <DataTrigger Binding="{Binding FindControlVisible}" Value="True">
                           <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                        </DataTrigger>
                     </Style.Triggers>
                  </Style>
               </Button.Style>
               <Path Data="{hsv:Icon Search}"/>
            </Button>
            <Rectangle Width="5"/>
            <Button ToolTip="Launch Saved File (F5)" Command="{Binding RunFile}" CommandParameter="{DynamicResource FileSystem}">
               <Button.Style>
                  <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                     <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                           <Setter Property="Foreground" Value="{DynamicResource Stream2}"/>
                        </Trigger>
                     </Style.Triggers>
                  </Style>
               </Button.Style>
               <Path Data="M0,0 L5,5 0,10 Z"/>
            </Button>
            <Rectangle Width="5"/>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5,0,0,0" Height="18" Visibility="{Binding ShowWidthOptions, Converter={StaticResource BoolToVisibility}}">
               <TextBlock Foreground="{DynamicResource Secondary}" Text="Row Width:"/>
               <TextBox Text="{Binding SelectedTab.PreferredWidth, UpdateSourceTrigger=PropertyChanged}" Width="30" HorizontalContentAlignment="Right" Margin="5,0"/>
               <ToggleButton IsChecked="{Binding SelectedTab.StretchData}" ToolTip="Stretch Cells to fill available space.">
                  <ToggleButton.Content>
                     <Path Data="{hsv:Icon ArrowsLeftRight}"/>
                  </ToggleButton.Content>
               </ToggleButton>
               <ToggleButton IsChecked="{Binding SelectedTab.AutoAdjustDataWidth}" VerticalContentAlignment="Center" ToolTip="Adjust Width after Goto">
                  <ToggleButton.Content>
                     <TextBlock Text="Auto" VerticalAlignment="Bottom" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                  </ToggleButton.Content>
               </ToggleButton>
               <ToggleButton IsChecked="{Binding SelectedTab.AllowMultipleElementsPerLine}" ToolTip="Allow Multiple Rows per Line.">
                  <ToggleButton.Content>
                     <Path Data="{hsv:Icon MultiList}"/>
                  </ToggleButton.Content>
               </ToggleButton>
            </StackPanel>
         </StackPanel>
         <Border DockPanel.Dock="Top" Height="1" Background="{DynamicResource Backlight}"/>
         <Grid Background="{DynamicResource Background}">
            <hsg3hv:StartScreen>
               <hsg3hv:StartScreen.Style>
                  <Style TargetType="FrameworkElement">
                     <Setter Property="Visibility" Value="Collapsed"/>
                     <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=Tabs, Path=SelectedIndex}" Value="-1">
                           <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                     </Style.Triggers>
                  </Style>
               </hsg3hv:StartScreen.Style>
            </hsg3hv:StartScreen>
            <TabControl Name="Tabs" ItemsSource="{Binding}" SelectedIndex="{Binding SelectedIndex}">
               <TabControl.Style>
                  <Style TargetType="TabControl" BasedOn="{StaticResource {x:Type TabControl}}">
                     <Style.Triggers>
                        <Trigger Property="SelectedIndex" Value="-1">
                           <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                     </Style.Triggers>
                  </Style>
               </TabControl.Style>
               <TabControl.InputBindings>
                  <KeyBinding Key="Esc" Command="{Binding HideSearchControls}"/>
               </TabControl.InputBindings>
               <TabControl.ItemTemplate>
                  <DataTemplate>
                     <StackPanel Orientation="Horizontal">
                        <StackPanel.ToolTip>
                           <ToolTip BorderThickness="0" Background="{DynamicResource Backlight}">
                              <TextBlock Text="{Binding FullFileName}"/>
                           </ToolTip>
                        </StackPanel.ToolTip>
                        <TextBlock Name="TabTextBlock" Background="Transparent" Text="{Binding Name}" Foreground="{DynamicResource Primary}" MouseDown="TabMouseDown" MouseMove="TabMouseMove" MouseUp="TabMouseUp">
                           <TextBlock.InputBindings>
                              <MouseBinding MouseAction="MiddleClick" Command="{Binding Close}" CommandParameter="{DynamicResource FileSystem}"/>
                           </TextBlock.InputBindings>
                        </TextBlock>
                        <Button Command="{Binding Close}" CommandParameter="{DynamicResource FileSystem}" Width="15" Margin="5,0,0,0" Background="{DynamicResource Background}" BorderBrush="{DynamicResource Background}"
                           VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                           <Path Data="{hsv:Icon Exit}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                        </Button>
                     </StackPanel>
                  </DataTemplate>
               </TabControl.ItemTemplate>
               <TabControl.ContentTemplate>
                  <DataTemplate>
                     <ContentControl Content="{Binding}">
                        <ContentControl.Resources>
                           <DataTemplate DataType="{x:Type hshmcvm:ViewPort}">
                              <hsg3hv:TabView
                                 AnimateScroll="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.AnimateScroll}"
                                 ZoomLevel="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZoomLevel}"/>
                           </DataTemplate>
                           <DataTemplate DataType="{x:Type hshmcvm:SearchResultsViewPort}">
                              <hsg3hv:TabView
                                 AnimateScroll="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.AnimateScroll}"
                                 ZoomLevel="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZoomLevel}"/>
                           </DataTemplate>
                           <DataTemplate DataType="{x:Type hshmcvm:DexReorderTab}">
                              <hsg3hv:DexReorderView />
                           </DataTemplate>
                           <DataTemplate DataType="{x:Type hshmcvm:ImageEditorViewModel}">
                              <hsg3hv:ImageEditorView />
                           </DataTemplate>
                        </ContentControl.Resources>
                     </ContentControl>
                  </DataTemplate>
               </TabControl.ContentTemplate>
            </TabControl>
            <Rectangle Fill="{DynamicResource Background}" Opacity="0" Name="GotoBackground" Visibility="{Binding GotoViewModel.ControlVisible, Converter={StaticResource BoolToVisibility}}"/>
            <ScrollViewer Name="GotoPanel" VerticalScrollBarVisibility="Auto" Visibility="{Binding GotoViewModel.ControlVisible, Converter={StaticResource BoolToVisibility}}">
               <ScrollViewer.InputBindings>
                  <KeyBinding Key="Esc" Command="{Binding GotoViewModel.ShowGoto}">
                     <KeyBinding.CommandParameter>
                        <sys:Boolean>false</sys:Boolean>
                     </KeyBinding.CommandParameter>
                  </KeyBinding>
                  <KeyBinding Key="Return" Command="{Binding GotoViewModel.Goto}"/>
               </ScrollViewer.InputBindings>
               <Grid>
                  <Grid.RowDefinitions>
                     <RowDefinition Height="*"/>
                     <RowDefinition Height="Auto"/>
                     <RowDefinition Height="*"/>
                     <RowDefinition Height="Auto"/>
                     <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                     <DockPanel>
                        <Canvas Width="0" Height="0" VerticalAlignment="Bottom" DockPanel.Dock="Left">
                           <TextBlock Text="Edit → " Canvas.Right="0" Canvas.Bottom="0" Foreground="{DynamicResource Secondary}"/>
                        </Canvas>
                        <Button Background="{DynamicResource Background}" BorderBrush="{DynamicResource Secondary}" Command="{Binding GotoViewModel.ShowGoto}" Padding="4"
                              ToolTip="Close (esc)"
                              DockPanel.Dock="Right" Width="20" Height="20" VerticalAlignment="Top" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                           <Button.CommandParameter>
                              <sys:Boolean>false</sys:Boolean>
                           </Button.CommandParameter>
                           <Path Data="{hsv:Icon Exit}" Fill="{DynamicResource Secondary}" Stretch="Uniform"/>
                        </Button>
                        <TextBlock FontSize="20">
                           <Run Text="Goto: "/>
                           <Run FontStyle="Italic" Foreground="{DynamicResource Secondary}" Text="What would you like to view or edit?"/>
                        </TextBlock>
                     </DockPanel>
                     <StackPanel Orientation="Horizontal">
                        <Grid>
                           <TextBox Name="GotoBox" FontSize="30" Text="{Binding GotoViewModel.Text, UpdateSourceTrigger=PropertyChanged}" MinWidth="400" IsVisibleChanged="EditBoxVisibilityChanged">
                              <TextBox.InputBindings>
                                 <KeyBinding Key="Esc" Command="{Binding GotoViewModel.ShowGoto}">
                                    <KeyBinding.CommandParameter>
                                       <sys:Boolean>false</sys:Boolean>
                                    </KeyBinding.CommandParameter>
                                 </KeyBinding>
                                 <KeyBinding Key="Return" Command="{Binding GotoViewModel.Goto}"/>
                              </TextBox.InputBindings>
                           </TextBox>
                           <TextBlock IsHitTestVisible="False" Foreground="{DynamicResource Secondary}" FontStyle="Italic" FontSize="25" VerticalAlignment="Bottom" Margin="3">
                              <TextBlock.Style>
                                 <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                       <DataTrigger Binding="{Binding GotoViewModel.Text}" Value="">
                                          <Setter Property="Visibility" Value="Visible"/>
                                       </DataTrigger>
                                    </Style.Triggers>
                                 </Style>
                              </TextBlock.Style>
                              type an address or anchor name
                           </TextBlock>
                        </Grid>
                        <Button Content="Go" VerticalAlignment="Stretch" Padding="12,0" Command="{Binding GotoViewModel.Goto}" Background="{DynamicResource Accent}"/>
                     </StackPanel>
                     <Canvas Width="0" Height="0" HorizontalAlignment="Left" DockPanel.Dock="Bottom">
                        <Border Width="20" Height="20" Background="Transparent" Canvas.Top="5" Canvas.Left="5" ToolTipService.ShowDuration="10000" MouseLeftButtonDown="ShowElementPopup" MouseLeave="HideElementPopup">
                           <Path Fill="{DynamicResource Secondary}" Data="{hsv:Icon Help}" Stretch="Uniform" Opacity=".5"/>
                           <Border.ToolTip>
                              <ToolTip>
                                 <Grid>
                                    <Grid.RowDefinitions>
                                       <RowDefinition Height="*"/>
                                       <RowDefinition Height="*"/>
                                       <RowDefinition Height="*"/>
                                       <RowDefinition Height="*"/>
                                       <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                       <ColumnDefinition Width="Auto"/>
                                       <ColumnDefinition Width="10"/>
                                       <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Text="Examples:" Margin="0,0,0,6"/>
                                    <TextBlock FontWeight="Bold" Grid.Row="1" Text="256AC8" Margin="0,0,0,6"/>
                                    <TextBlock FontStyle="Italic" Grid.Row="1" Grid.Column="2" Text="Go to an address in the file"/>
                                    <TextBlock FontWeight="Bold" Grid.Row="2" Text="scripts.shiny.odds" Margin="0,0,0,6"/>
                                    <TextBlock FontStyle="Italic" Grid.Row="2" Grid.Column="2" Text="List uses of a named value"/>
                                    <TextBlock FontWeight="Bold" Grid.Row="3" Text="graphics.bag.male.sprite" Margin="0,0,0,6"/>
                                    <TextBlock FontStyle="Italic" Grid.Row="3" Grid.Column="2" Text="Jump to named data (anchor)"/>
                                    <TextBlock FontWeight="Bold" Grid.Row="4" Text="data.pokemon.names/CHARIZARD"/>
                                    <TextBlock FontStyle="Italic" Grid.Row="4" Grid.Column="2" Text="Go to a specific row in a table"/>
                                 </Grid>
                              </ToolTip>
                           </Border.ToolTip>
                        </Border>
                     </Canvas>
                  </StackPanel>
                  <ItemsControl MinHeight="100" ItemsSource="{Binding GotoViewModel.PrefixSelections}" Grid.Row="3">
                     <ItemsControl.ItemTemplate>
                        <DataTemplate>
                           <StackPanel>
                              <Rectangle HorizontalAlignment="Stretch" Height="1" Margin="0,3" Fill="{DynamicResource Secondary}" Width="{Binding ActualWidth, ElementName=GotoBox}"/>
                              <ItemsControl ItemsSource="{Binding Tokens}" HorizontalAlignment="Center">
                                 <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                       <UniformGrid Rows="{Binding Height}" Columns="{Binding Width}"/>
                                    </ItemsPanelTemplate>
                                 </ItemsControl.ItemsPanel>
                                 <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                       <Border Margin="5" BorderThickness="1">
                                          <Border.Style>
                                             <Style TargetType="Border">
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                <Style.Triggers>
                                                   <Trigger Property="IsMouseOver" Value="True">
                                                      <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                                   </Trigger>
                                                   <MultiDataTrigger>
                                                      <MultiDataTrigger.Conditions>
                                                         <Condition Binding="{Binding IsSelected}" Value="True"/>
                                                         <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                      </MultiDataTrigger.Conditions>
                                                      <Setter Property="BorderBrush" Value="{DynamicResource Accent}"/>
                                                   </MultiDataTrigger>
                                                </Style.Triggers>
                                             </Style>
                                          </Border.Style>
                                          <Border BorderThickness="1">
                                             <Border.Style>
                                                <Style TargetType="Border">
                                                   <Setter Property="BorderBrush" Value="{DynamicResource Primary}"/>
                                                   <Style.Triggers>
                                                      <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                         <Setter Property="BorderBrush" Value="{DynamicResource Accent}"/>
                                                      </DataTrigger>
                                                      <DataTrigger Binding="{Binding IsSelectable}" Value="False">
                                                         <Setter Property="ToolTip" Value="Too many options. Please filter further."/>
                                                      </DataTrigger>
                                                   </Style.Triggers>
                                                </Style>
                                             </Border.Style>
                                             <ToggleButton
                                                BorderThickness="0"
                                                Content="{Binding Content}"
                                                IsChecked="{Binding IsSelected}"
                                                Padding="6"
                                                FontSize="15"
                                                IsEnabled="{Binding IsSelectable}">
                                                <ToggleButton.Style>
                                                   <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                                      <Setter Property="ToolTip">
                                                         <Setter.Value>
                                                            <hsg3hv:HexContentToolTip DataContext="{Binding PlacementTarget.DataContext.HoverTip, RelativeSource={RelativeSource Self}}"/>
                                                         </Setter.Value>
                                                      </Setter>
                                                      <Style.Triggers>
                                                         <DataTrigger Binding="{Binding HoverTip}" Value="{x:Null}">
                                                            <Setter Property="ToolTip" Value="{x:Null}"/>
                                                         </DataTrigger>
                                                      </Style.Triggers>
                                                   </Style>
                                                </ToggleButton.Style>
                                             </ToggleButton>
                                          </Border>
                                       </Border>
                                    </DataTemplate>
                                 </ItemsControl.ItemTemplate>
                              </ItemsControl>
                           </StackPanel>
                        </DataTemplate>
                     </ItemsControl.ItemTemplate>
                  </ItemsControl>
               </Grid>
            </ScrollViewer>
         </Grid>
      </DockPanel>
      <Border IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="10" BorderBrush="{DynamicResource Background}">
         <TextBox IsReadOnly="True" FontSize="20" TextBlock.LineHeight="25" Background="{DynamicResource Background}" BorderBrush="{DynamicResource Accent}"
            Visibility="{Binding ShowOverlayText, Converter={StaticResource BoolToVisibility}}" Text="{Binding OverlayText}" />
      </Border>
      <Rectangle Name="FocusAnimationElement" StrokeThickness="2" Stroke="{DynamicResource Accent}" Visibility="Visible" HorizontalAlignment="Right" VerticalAlignment="Top"/>
   </Grid>
</Window>
